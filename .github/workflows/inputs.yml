name: Testing workflow dispatch input

on:
  workflow_dispatch:
    inputs:
      vmRepo:
        description: Choose a source SiteRx Repo to checkout.
        type: choice
        options:
         - FRONTEND
         - siterx-referral-console
         - siterx-annotator
         - siterx-trial-site-console
         - siterx-site-console
         - siterx-super-admin
         - siterx-payments
         - siterx-shorty-console
         - BACKEND
         - siterx-webapp
         - siterx-shorty-backend
         - siterx-ehr-patient-extractor
         - siterx-encryption-service
         - siterx-document-handler
         - siterx-ehr-patient-rpt-upload
      action:
        description: Choose an action to perform
        type: choice
        default: build
        options:
         - Build
         - Deploy
         - Delete

      vmEnv:
        description: Choose destination Environment.
        type: choice
        options:
         - dev-shrek
         - dev-vikings
         - dev-geeks
         - dev-ninjas
         - dev-farquaad
         - dev-wolfpack

jobs:

  secrets:
    name: Check out secrets repo
    runs-on: ubuntu-latest
    steps:
    - uses:  actions/checkout@v3
      with:
         repository: ${{ github.repository }}
         token: ${{ secrets.GITHUB_TOKEN }}
         ref: dev/${{ github.event.inputs.vmEnv }}
         path: secrets

  setup:
    env: 
      frontend : '["siterx-referral-console","siterx-annotator","siterx-trial-site-console"]'
      backend : '["siterx-webapp", "siterx-shorty-backend"]'
      repo: devops
      branch: dev
      vmRepo: ${{ github.event.inputs.vmRepo }}
      
    name: Conditionally Run
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      #!
      - if: contains(env.frontend, env.vmRepo)
        id: step1
        run: |
          echo $vmRepo is frontend
          echo "::set-output name=test::frontend"
      - if: contains(env.backend, env.vmRepo)
        id: step2
        run: |
          echo $vmRepo is Backend
          echo "::set-output name=test::backend"
      
  check:
    name: output check
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - name: checking the output
        run: |
          echo ${{needs.setup.outputs.output1}}
          echo ${{needs.setup.outputs.output2}}
          
          
  Backend:
    if: ${{ ( needs.setup.outputs.output2 == 'backend' ) }}
    name: Backend Job
    runs-on: ubuntu-latest
    needs: [ check ]
    steps:
       - run: |
            echo running backend jobs 
  
  Frontend:
    if: ${{ ( needs.setup.outputs.output1 == 'frontend' ) }}
    name: frontend Job
    runs-on: ubuntu-latest
    needs: [ setup,check ]
    steps:
       - run: |
            echo Runing frontend jobs   
